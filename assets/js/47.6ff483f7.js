(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{1097:function(e,s,t){"use strict";t.r(s);var r=t(67),l=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"stylus-selector-pseudo-class-case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stylus-selector-pseudo-class-case"}},[e._v("#")]),e._v(" stylus/selector-pseudo-class-case")]),e._v(" "),t("blockquote",[t("p",[e._v("enforce lowercase or uppercase for pseudo-class selectors.")])]),e._v(" "),t("ul",[t("li",[e._v("‚öôÔ∏è This rule is included in "),t("code",[e._v('"stylelint-plugin-stylus/standard"')]),e._v(". (options: "),t("code",[e._v('"lower"')]),e._v(")")]),e._v(" "),t("li",[e._v("üîß The "),t("a",{attrs:{href:"https://stylelint.io/user-guide/usage/options#fix",target:"_blank",rel:"noopener noreferrer"}},[e._v("fix option"),t("OutboundLink")],1),e._v(" can automatically fix some of the problems reported by this rule.")])]),e._v(" "),t("h2",{attrs:{id:"rule-details"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" üìñ Rule Details")]),e._v(" "),t("p",[e._v("This rule enforce lowercase or uppercase for hex colors.")]),e._v(" "),t("h2",{attrs:{id:"why-not-use-stylelint-rule"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#why-not-use-stylelint-rule"}},[e._v("#")]),e._v(" ‚ùì Why Not Use "),t("code",[e._v("stylelint")]),e._v(" Rule")]),e._v(" "),t("p",[e._v("The "),t("a",{attrs:{href:"https://stylelint.io/user-guide/rules/selector-pseudo-class-case",target:"_blank",rel:"noopener noreferrer"}},[e._v("selector-pseudo-class-case"),t("OutboundLink")],1),e._v(" rule correctly report errors in Stylus, but breaks the syntax in autofix."),t("br"),e._v("\nThis problem is that the core rules do not understand selector of the Stylus."),t("br"),e._v("\nThe "),t("code",[e._v("stylus/selector-pseudo-class-case")]),e._v(" rule understands selector of the Stylus.")]),e._v(" "),t("h2",{attrs:{id:"options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" üîß Options")]),e._v(" "),t("p",[e._v("See "),t("a",{attrs:{href:"https://stylelint.io/user-guide/rules/selector-pseudo-class-case#options",target:"_blank",rel:"noopener noreferrer"}},[e._v("stylelint - selector-pseudo-class-case - Options"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"related-rules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-rules"}},[e._v("#")]),e._v(" üë´ Related rules")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://stylelint.io/user-guide/rules/selector-pseudo-class-case",target:"_blank",rel:"noopener noreferrer"}},[e._v("selector-pseudo-class-case"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"implementation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" üîç Implementation")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/ota-meshi/stylelint-plugin-stylus/blob/master/lib/rules/selector-pseudo-class-case.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rule source"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ota-meshi/stylelint-plugin-stylus/blob/master/tests/lib/rules/selector-pseudo-class-case.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test source"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=l.exports}}]);