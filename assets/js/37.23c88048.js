(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{1087:function(e,t,r){"use strict";r.r(t);var s=r(67),l=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"stylus-no-eol-whitespace"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#stylus-no-eol-whitespace"}},[e._v("#")]),e._v(" stylus/no-eol-whitespace")]),e._v(" "),r("blockquote",[r("p",[e._v("disallow end-of-line whitespace.")])]),e._v(" "),r("ul",[r("li",[e._v("‚öôÔ∏è This rule is included in "),r("code",[e._v('"stylelint-plugin-stylus/standard"')]),e._v(". (options: "),r("code",[e._v("true")]),e._v(")")]),e._v(" "),r("li",[e._v("üîß The "),r("a",{attrs:{href:"https://stylelint.io/user-guide/usage/options#fix",target:"_blank",rel:"noopener noreferrer"}},[e._v("fix option"),r("OutboundLink")],1),e._v(" can automatically fix some of the problems reported by this rule.")])]),e._v(" "),r("h2",{attrs:{id:"rule-details"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" üìñ Rule Details")]),e._v(" "),r("p",[e._v("This rule require or disallow a leading zero for fractional numbers less than 1.")]),e._v(" "),r("h2",{attrs:{id:"why-not-use-stylelint-rule"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why-not-use-stylelint-rule"}},[e._v("#")]),e._v(" ‚ùì Why Not Use "),r("code",[e._v("stylelint")]),e._v(" Rule")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://stylelint.io/user-guide/rules/no-eol-whitespace",target:"_blank",rel:"noopener noreferrer"}},[e._v("no-eol-whitespace"),r("OutboundLink")],1),e._v(" rule correctly report errors in Stylus, but error remains with autofix."),r("br"),e._v("\nThis problem is that the core rules do not understand that can omit braces in Stylus."),r("br"),e._v("\nThe "),r("code",[e._v("stylus/no-eol-whitespace")]),e._v(" rule understands that can omit braces in Stylus.")]),e._v(" "),r("h2",{attrs:{id:"options"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" üîß Options")]),e._v(" "),r("p",[e._v("See "),r("a",{attrs:{href:"https://stylelint.io/user-guide/rules/no-eol-whitespace#options",target:"_blank",rel:"noopener noreferrer"}},[e._v("stylelint - no-eol-whitespace - Options"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"related-rules"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#related-rules"}},[e._v("#")]),e._v(" üë´ Related rules")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://stylelint.io/user-guide/rules/no-eol-whitespace",target:"_blank",rel:"noopener noreferrer"}},[e._v("no-eol-whitespace"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"implementation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" üîç Implementation")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/ota-meshi/stylelint-plugin-stylus/blob/master/lib/rules/no-eol-whitespace.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rule source"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ota-meshi/stylelint-plugin-stylus/blob/master/tests/lib/rules/no-eol-whitespace.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test source"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=l.exports}}]);